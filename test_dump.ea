dump

(dumpln (~ 1))
(dumpln "1")
(dumpln '1)
(dumpln (type_of '1))
(dumpln nil)

(assert 'integer (type_of 1))
(assert 'text    (type_of "1"))
(assert 'symbol  (type_of 'val))
(assert nil      (type_of nil))
(assert 'primitive (type_of println))
(assert 'fixed    (type_of let))

(define fooness 'fooness)
(define barness (lambda (ok)
                  (dumpln ok)
                  (println (type_of ok))
                  1
                  ))

(println (barness "testing"))

(dumpln (global_environment))

(exit 0)

((nil)
 (t . t)
 (println . primitive(0x8704b69 println))
 (print . primitive(0x8704ad9 print))
 (dumpln . primitive(0x8704a49 dumpln))
 (dump . primitive(0x87049b9 dump))
 (global_environment . primitive(0x8704929 global_environment))
 (current_environment . primitive(0x8704889 current_environment))
 (abort . primitive(0x87047e9 abort))
 (exit . primitive(0x8704759 exit))
 (assert . primitive(0x87046c9 assert))
 (iso . primitive(0x8704639 iso))
 (!= . primitive(0x87045a9 !=))
 (= . primitive(0x8704519 =))
 (> . primitive(0x8704489 >))
 (>= . primitive(0x87043f9 >=))
 (<= . primitive(0x8704369 <=))
 (< . primitive(0x87042d9 <))
 (>> . primitive(0x8704249 >>))
 (<< . primitive(0x87041b9 <<))
 (^ . primitive(0x8704129 ^))
 (|| . primitive(0x8704099 ||))
 (& . primitive(0x8704009 &))
 (% . primitive(0x8703f79 %))
 (/ . primitive(0x8703ee9 /))
 (* . primitive(0x8703e59 *))
 (+ . primitive(0x8703dc9 +))
 (~ . primitive(0x8703d39 ~))
 (type_of . primitive(0x8703ca9 type_of))
 (apply . primitive(0x8703c19 apply))
 (eval . primitive(0x8703b89 eval))
 (form . primitive(0x8703af9 form))
 (apply_form . primitive(0x8703a69 apply_form))
 (apply_expr . primitive(0x87039d1 apply_expr))
 (eval_pair . primitive(0x8703939 eval_pair))
 (eval_symbol . primitive(0x87038a1 eval_symbol))
 (find . primitive(0x8703809 find))
 (gensym . primitive(0x8703779 gensym))
 (lambda . fixed(0x87036e9))
 (while . fixed(0x8703669))
 (let . fixed(0x87035b9))
 (define . fixed(0x8703509))
 (set . fixed(0x8703459))
 (or . fixed(0x87033d9))
 (and . fixed(0x8703329))
 (if . fixed(0x8703279))
 (quote . fixed(0x87031c9)))
