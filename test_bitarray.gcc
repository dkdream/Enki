
#include "bit_array.h"
#include <stdio.h>

static void echo_array(BitArray *array) {

    int at = bits_walk(array, -1);

    printf("marker %u count %lu size %u\n",
           bits_marker(array),
           bits_count(array),
           bits_size(array));

    printf("first offset %d\n", at);

    for (;;) {
        if (0 > at) break;

        printf("index set %d\n", at);

        at = bits_walk(array, at);
    }
}

static void test_walk() {
    printf("\n\ntest-walk\n");

    BitArray array = BITS_INITIALISER;

    bits_init(&array);

    bits_set(&array, 0,   true);
    bits_set(&array, 10,  true);
    bits_set(&array, 100, true);
    bits_set(&array, 110, true);
    bits_set(&array, 120, true);
    bits_set(&array, 130, true);
    bits_set(&array, 140, true);
    bits_set(&array, 145, true);
    bits_set(&array, 145, false);
    bits_set(&array, 150, true);
    bits_set(&array, 255, true);

    echo_array(&array);

    bits_free(&array);
}

static void test_section() {
    printf("\n\ntest-section\n");

    BitArray array = BITS_INITIALISER;

    bits_init(&array);

    bits_section(&array, 1, 100, true);

    echo_array(&array);

    bits_section(&array, 50, 60, false);

    echo_array(&array);

    bits_free(&array);
}

int main(int argc, char** argv) {
    test_walk();
    test_section();

    return 0;
}


