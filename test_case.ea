(define value (ctor 'tuple tuple 1 2 3 4))

(dumpln value)
(dumpln (type-of value))

(case value
   (tuple (a b)
          (dumpln "a=" a)
          (dumpln "b=" b))
   (tuple (a b c)
          (dumpln "a=" a)
          (dumpln "b=" b)
          (dumpln "c=" c))
   (tuple (a b c d)
          (dumpln "a=" a)
          (dumpln "b=" b)
          (dumpln "c=" c)
          (dumpln "d=" d))
   (tuple (a b c d e)
          (dumpln "a=" a)
          (dumpln "b=" b)
          (dumpln "c=" c)
          (dumpln "d=" d)
          (dumpln "e=" e))
   ((x) (dumpln "x=" x)))

(define value (ctor 'tuple tuple 1 2 3 4 5))

(println)
(dumpln value)
(dumpln (type-of value))

(case value
   (tuple (a b)
          (dumpln "a=" a)
          (dumpln "b=" b))
   (tuple (a b c)
          (dumpln "a=" a)
          (dumpln "b=" b)
          (dumpln "c=" c))
   (tuple (a b c d)
          (dumpln "a=" a)
          (dumpln "b=" b)
          (dumpln "c=" c)
          (dumpln "d=" d))
   (tuple (a b c d e)
          (dumpln "a=" a)
          (dumpln "b=" b)
          (dumpln "c=" c)
          (dumpln "d=" d)
          (dumpln "e=" e))
   ((x) (dumpln "x=" x))
   (. (println "else")))

(println)
(dumpln value)
(dumpln (type-of value))

(case value
   (tuple (a b)
          (dumpln "a=" a)
          (dumpln "b=" b))
   (tuple (a b c)
          (dumpln "a=" a)
          (dumpln "b=" b)
          (dumpln "c=" c))
   (tuple (a b c d)
          (dumpln "a=" a)
          (dumpln "b=" b)
          (dumpln "c=" c)
          (dumpln "d=" d))
   ((_ _ x _ _) (dumpln "x=" x))
   (. (println "else")))

(case value
   (tuple (a b)
          (dumpln "a=" a)
          (dumpln "b=" b))
   (tuple (a b c)
          (dumpln "a=" a)
          (dumpln "b=" b)
          (dumpln "c=" c))
   (tuple (a b c d)
          (dumpln "a=" a)
          (dumpln "b=" b)
          (dumpln "c=" c)
          (dumpln "d=" d))
   ((_ x _ _) (dumpln "x=" x))
   (. (println "else")))

          
          